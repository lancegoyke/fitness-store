# Generated by Django 5.2.4 on 2025-08-15 01:50

from django.db import migrations


def populate_empty_usernames(apps, schema_editor):
    """Populate empty username fields with email prefixes."""
    User = apps.get_model('users', 'User')

    # Find users with empty or null usernames
    users_with_empty_usernames = User.objects.filter(username__in=['', None])

    for user in users_with_empty_usernames:
        if user.email:
            # Extract username from email (part before @)
            base_username = user.email.split('@')[0]

            # Ensure username is unique by appending numbers if needed
            username = base_username
            counter = 1

            while User.objects.filter(username=username).exists():
                username = f"{base_username}{counter}"
                counter += 1

            user.username = username
            user.save(update_fields=['username'])


def reverse_populate_empty_usernames(apps, schema_editor):
    """Reverse operation - set usernames back to empty for affected users."""
    User = apps.get_model('users', 'User')

    # Find users whose username matches their email prefix
    for user in User.objects.all():
        if user.email and user.username:
            email_prefix = user.email.split('@')[0]
            # If username is email prefix or email prefix with numbers, clear it
            if user.username == email_prefix or (user.username.startswith(email_prefix) and user.username[len(email_prefix):].isdigit()):
                user.username = ''
                user.save(update_fields=['username'])


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_user_birthday_user_points_user_sex'),
    ]

    operations = [
        migrations.RunPython(
            populate_empty_usernames,
            reverse_populate_empty_usernames,
        ),
    ]
